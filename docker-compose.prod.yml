version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: embarcacoes_db_prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-embarcacoes}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-embarcacoes_db}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - embarcacoes_network_prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-embarcacoes}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: embarcacoes_backend_prod
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-embarcacoes}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-embarcacoes_db}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - embarcacoes_network_prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL}
    container_name: embarcacoes_frontend_prod
    restart: always
    depends_on:
      - backend
    networks:
      - embarcacoes_network_prod

  nginx:
    image: nginx:alpine
    container_name: embarcacoes_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    networks:
      - embarcacoes_network_prod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: embarcacoes_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  n8n:
    image: n8nio/n8n:latest
    container_name: embarcacoes_n8n_prod
    restart: always
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=${N8N_HOST:-n8n.seudominio.com.br}
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=${N8N_WEBHOOK_URL}
    volumes:
      - n8n_data_prod:/home/node/.n8n
    networks:
      - embarcacoes_network_prod

volumes:
  postgres_data_prod:
    driver: local
  n8n_data_prod:
    driver: local

networks:
  embarcacoes_network_prod:
    driver: bridge
